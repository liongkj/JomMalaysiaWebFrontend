
@model JomMalaysia.Presentation.ViewModels.Categories.NewCategoryViewModel

@{
    
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--HEADER-->
<div class="form-group col-md-12 no-padding d-none d-md-block">
    <button type="button" class="btn btn-success col-md-2" onclick="createCategory()">Save</button>
    <button type="button" class="btn btn-danger col-md-2" onclick="window.history.go(-1); return false;">Cancel</button>
</div>

<!--Mobile Buttons-->
<div class="form-group col-md-12 no-padding d-sm-block d-md-none">
    <div class="btn-group col-sm-12 no-padding" role="group">
        <button type="button" class="btn btn-primary">Action</button>
        <div id="dropdown-action-button" class="dropdown-menu col-sm-12" aria-labelledby="btnGroupDrop1" x-placement="bottom-start" style="display:none; position: absolute; transform: translate3d(0px, 35px, 0px); top: 0px; left: 0px; will-change: transform;">
            <a class="dropdown-item" onclick="$('#btnSubmit').click()">Save</a>
            <a class="dropdown-item" onclick="window.history.go(-1); return false;">Cancel</a>
        </div>
        <div id="action-button" class="btn-group" role="group">
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
        </div>
    </div>
</div>
<!--END OF HEADER-->
<h2>@TempData["title"]</h2>
<form asp-action="Create" id="FormCreate" class="form-m-gap-top" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.Hidden("parentCategoryId",TempData["categoryId"])
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryCode)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryCode, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryCode)
            @*<input type="text" class="form-control" id="txtSSMID" placeholder="Enter SSM ID">*@
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryName)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryName)
            @*<input type="text" class="form-control" id="txtSSMID" placeholder="Enter SSM ID">*@
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryNameMs)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryNameMs, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryNameMs)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryNameZh)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryNameZh, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryNameZh)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryImageUrl)</div>
        <div class="input-group col-sm-10 col-md-6">
            @Html.HiddenFor(m => m.CategoryImageUrl, new { @class = "form-control", id = "imageUrl" })
            @Html.HiddenFor(m => m.CategoryThumbnailUrl, new { @class = "form-control", id = "thumbnailUrl" })
            <input type="text" class="form-control" id="imageName" disabled />
            <div class="input-group-append">
                <button type="button" class="btn btn-secondary" id="btnUpload" onclick="uploadImageWidget.open();">Browse</button>
                 @Html.ValidationMessageFor(m => m.CategoryThumbnailUrl)
            </div>
        </div>
    </div>
</form>

@section Scripts{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <!-- cloudinary api -->
    <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>
    <script>cloudinary.setCloudName("jomn9-com")</script>
    <script type="text/javascript">
        var counter = 1;

    
        var uploadImageWidget = cloudinary.createUploadWidget(
            {
                ucloudname: 'jomn9-com',
                uploadPreset: 'ox3azzqe',
                apiKey: '731121621859821',
                folder: 'category_thumbnail',
                sources: ["local", "url", "image_search"],
                googleApiKey: 'AIzaSyCZseAlp_Rd9CxaJtOQBVKvpkBl8gHiXvk',
                searchBySites: ["all", "cloudinary.com", "unsplash.com", "freepik.com"],
                searchByRights: true,
                cropping: true,
                croppingAspectRatio: 1,
                resourceType: ["image"],
                clientAllowedFormats: ["png", "jpg", "jpeg"],
                minImageWidth: 100,
                minImageHeight: 100,
                autoMinimize: true,
                showSkipCropButton: true,


            }, (error, result) => {
                if (!error && result && result.event === "success") {
                    
                    console.log("Image uploaded");
                    $("#imageUrl").val(result.info.url); //TODO KJ - add one more for image url for subcategory?
                    $("#thumbnailUrl").val(result.info.thumbnail_url);
                    $("#imageName").val(result.info.original_filename + "." + result.info.format);
                }
            }
        );

        $("#btnUpload").on("click", function () {
            uploadImageWidget.open();
        });

        function createCategory() {
           
            let data = $('#FormCreate').serialize();
             //TODO KJ - create one more for create subcategory
            if ($("#FormCreate").valid()) {
                $.ajax({
                    //TODO add [ValidateAntiForgeryToken]
                    url: "/Category/Create/",
                    data: data,
                    type: "POST",
                    success: (function ({ item1, item2 }) {
                        debugger
                         if (item1 === 1) {
                            sweetAlert({
                                title: "Created",
                                text: "Category has been created successfully!",
                                type: "success"
                            },
                                function () {
                                    window.location.href = '/category';
                                });
                        } else {
                              swal("Oops",item2,"error");
                        }
                               }),  error: (function (data) {
                        swal("Oops", "An unknown error occured! Please contact technical support.", "error");
                    })
                })
            }
        }

    </script>
}