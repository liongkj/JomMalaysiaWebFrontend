@model JomMalaysia.Presentation.Models.Categories.Category

@{
    ViewData["Title"] = "Create Category";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--HEADER-->
<div class="form-group col-md-12 no-padding d-none d-md-block">
    <button type="button" class="btn btn-success col-md-2" onclick="createCategory()">Save</button>
    <button type="button" class="btn btn-danger col-md-2" onclick="window.history.go(-1); return false;">Cancel</button>
</div>

<!--Mobile Buttons-->
<div class="form-group col-md-12 no-padding d-sm-block d-md-none">
    <div class="btn-group col-sm-12 no-padding" role="group">
        <button type="button" class="btn btn-primary">Action</button>
        <div id="dropdown-action-button" class="dropdown-menu col-sm-12" aria-labelledby="btnGroupDrop1" x-placement="bottom-start" style="display:none; position: absolute; transform: translate3d(0px, 35px, 0px); top: 0px; left: 0px; will-change: transform;">
            <a class="dropdown-item" onclick="$('#btnSubmit').click()">Save</a>
            <a class="dropdown-item" onclick="window.history.go(-1); return false;">Cancel</a>
        </div>
        <div id="action-button" class="btn-group" role="group">
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
        </div>
    </div>
</div>
<!--END OF HEADER-->

<form asp-action="Create" id="FormCreate" class="form-m-gap-top" method="post"s>
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryCode)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryCode, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryCode)
            @*<input type="text" class="form-control" id="txtSSMID" placeholder="Enter SSM ID">*@
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryName)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryName)
            @*<input type="text" class="form-control" id="txtSSMID" placeholder="Enter SSM ID">*@
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryNameMs)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryNameMs, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryNameMs)
            @*<input type="text" class="form-control" id="txtSSMID" placeholder="Enter SSM ID">*@
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryNameZh)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryNameZh, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryNameZh)
            @*<input type="text" class="form-control" id="txtSSMID" placeholder="Enter SSM ID">*@
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryImage)</div>
        <div class="input-group col-sm-10 col-md-6">
            <input type="text" class="form-control" id="cloudinary-publicid"/>
            <div class="input-group-append">
                <button type="button" class="btn btn-secondary" id="btnUpload">Browse</button>
                @*<input type="file" id="btnUpload_hidden" style="display: none;" accept="image/*"/>*@


            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label"></div>
        <img src="" id="profile-img-tag" width="200" class="img-rounded" />
    </div>
    @*<button id="btnSubmit" type="submit" class="d-none"></button>*@
</form>

@section Scripts{
    <!-- cloudinary api -->
<script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript">  </script>

<script>cloudinary.setCloudName("jomn9-com")</script>


<script type="text/javascript">
     

    var uploadImageWidget = cloudinary.createUploadWidget(
        {
            ucloudname: 'jomn9-com',
            uploadPreset: 'ox3azzqe',
            apiKey: '731121621859821',
            folder:'category_thumbnail',
            sources: ["local", "url", "image_search"],
            googleApiKey: 'AIzaSyCZseAlp_Rd9CxaJtOQBVKvpkBl8gHiXvk',
            searchBySites: ["all", "cloudinary.com","unsplash.com","freepik.com"],
            searchByRights: true,
            cropping:true,
            croppingAspectRatio: 1,
            resourceType: ["image"],
            clientAllowedFormats: ["png", "jpg", "jpeg"],
            minImageWidth:100,
            minImageHeight: 100,
            autoMinimize: true,
            showSkipCropButton: false,
            
            
        }, (error, result) => {
            if (!error && result && result.event === "success") {
                debugger;
                console.log("Image uploaded");
                document.getElementById("cloudinary-publicid").value = result.info.url;
                //cheechuen - add onemore thumbnail url = result.info.thumbnail.url
                
            }
        }
    )

    document.getElementById("btnUpload").addEventListener("click", function () {
        uploadImageWidget.open();
    }, false);
</script>
<!--chee chuen: how to properly put js? -->
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
       
       function createCategory() {
            debugger;
           var data = $('#FormCreate').serialize();

            if ($("#FormCreate").valid()) {
                 $.ajax({
                        //TODO add [ValidateAntiForgeryToken]
                        url: "/Category/Create/",
                        data: data,
                        type: "POST",
                        success: (function (data) {
                            if (data == 1) {
                                sweetAlert({
                                    title: "Created",
                                    text: "Category has been created successfully!",
                                    type: "success"
                                },
                                    function () {
                                        window.location.href = '/category';
                                    });
                            }
                        }), error: (function (data) {
                            swal("Oops", "An unknown error occured! Please contact technical support.", "error");
                        })
                    })
            }           
        }


        //$("#btnUpload").click(function () {
        //    $("#btnUpload_hidden").click();
        //});

        //$("btnUpload_hidden").change(function () {
        //    readURL(this);
        //});

        //function readURL(input) {
        //    if (input.files && input.files[0]) {
        //        var reader = new FileReader();

        //        reader.onload = function (e) {
        //            $('#profile-img-tag').attr('src', e.target.result);
        //        }
        //        reader.readAsDataURL(input.files[0]);
        //    }
        //}
    </script>
}