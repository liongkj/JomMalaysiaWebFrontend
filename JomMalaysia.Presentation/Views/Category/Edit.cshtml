@model JomMalaysia.Presentation.Models.Categories.Category

@{
    ViewData["Title"] = "Edit Category";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="form-group col-md-12 no-padding d-none d-md-block">
    <button type="button" class="btn btn-success col-md-2" onclick="editCategory()">Save</button>
    <button type="button" class="btn btn-danger col-md-2" onclick="window.history.go(-1); return false;">Cancel</button> 
</div>

<form asp-action="Edit" id="FormEdit" class="form-m-gap-top">

    <!-- add whatever model data not in fields.-->
    @Html.HiddenFor(m => m.CategoryId)

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryCode)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryCode, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryCode)
            @*<input type="text" class="form-control" id="txtSSMID" placeholder="Enter SSM ID">*@
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryName)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryName)
            @*<input type="text" class="form-control" id="txtSSMID" placeholder="Enter SSM ID">*@
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryNameMs)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryNameMs, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryNameMs)
            @*<input type="text" class="form-control" id="txtSSMID" placeholder="Enter SSM ID">*@
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryNameZh)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryNameZh, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryNameZh)
            @*<input type="text" class="form-control" id="txtSSMID" placeholder="Enter SSM ID">*@
        </div>
    </div>
</form>


@section Scripts{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        var counter = 1;

        $(".tb-subcategory").on("click", ".btnDelete", function (event) {
            $(this).closest("tr").addClass("d-none");
            $(this).closest("tr").find('.isDelete').val("true");
            //lstSubCategory_0__categoryId
            //$(this).closest('tr').find('#isDeleted').prop('checked', true);
        });

        function editCategory() {
            debugger;
            var data = $('#FormEdit').serialize();

            //TODO KJ - create one more for edit subcategory
            if ($("#FormEdit").valid()) {
                $.ajax({
                    //TODO add [ValidateAntiForgeryToken]
                    url: "/Category/Edit/",
                    data: data,
                    type: "POST",
                    success: (function (data) {
                        if (data == 1) {
                            sweetAlert({
                                title: "Updated",
                                text: "Category details have been updated successfully!",
                                type: "success"
                            },
                                function () {
                                    window.location.href = '/category';
                                });
                        }
                        else {
                            swal("Oops", "An unknown error occured! Please contact technical support.", "error");
                        }
                    }), error: (function (data) {
                        swal("Oops", "An unknown error occured! Please contact technical support.", "error");
                    })
                })
            }
        }
    </script>
}