@model JomMalaysia.Presentation.Models.Categories.Category

@{
    ViewData["Title"] = "Edit Category";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="form-group col-md-12 no-padding d-none d-md-block">
    <button type="button" class="btn btn-success col-md-2" onclick="editCategory()">Save</button>
    <button type="button" class="btn btn-danger col-md-2" onclick="window.history.go(-1); return false;">Cancel</button>
</div>

<form asp-action="Edit" id="FormEdit" class="form-m-gap-top">

    <!-- add whatever model data not in fields.-->
    @Html.HiddenFor(m => m.CategoryId)

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryThumbnail)</div>
        @Html.Hidden("CategoryImageUrl",@Model.CategoryThumbnail.Url, new {@class = "form-control", id = "imageUrl"})
        <div class="col-sm-10 col-md-6">
            <figure class="figure">
                <img src="@Model.CategoryThumbnail.Url" class="figure-img img-fluid rounded" id="thumbnail-preview" alt="@Model.CategoryCode-logo">

                <div class="input-group-append">
                    <button type="button" class="btn btn-secondary" id="btnUpload" onclick="uploadImageWidget.open();">Replace</button>
                    @Html.ValidationMessageFor(m => m.CategoryThumbnail.Url)
                </div>
            </figure>
        </div>

    </div>

    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryCode)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryCode, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.CategoryCode)

        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryName)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryName, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.CategoryName)

        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryNameMs)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryNameMs, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.CategoryNameMs)

        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.CategoryNameZh)</div>
        <div class="col-sm-10 col-md-6">
            @Html.TextBoxFor(m => m.CategoryNameZh, new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.CategoryNameZh)

        </div>
    </div>
</form>


@section Scripts{

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <!-- cloudinary api -->
    <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>
    <script>cloudinary.setCloudName("jomn9-com")</script>

    <script type="text/javascript">
         
            let uploadImageWidget = cloudinary.createUploadWidget(
                {
                    ucloudname: 'jomn9-com',
                    uploadPreset: 'ox3azzqe',
                    apiKey: '731121621859821',
                    folder: 'category_thumbnail',
                    sources: ["local", "url", "image_search"],
                    googleApiKey: 'AIzaSyCZseAlp_Rd9CxaJtOQBVKvpkBl8gHiXvk',
                    searchBySites: ["all", "cloudinary.com", "unsplash.com", "freepik.com"],
                    searchByRights: true,
                    cropping: true,
                    croppingAspectRatio: 1,
                    resourceType: ["image"],
                    clientAllowedFormats: ["png", "jpg", "jpeg"],
                    minImageWidth: 100,
                    minImageHeight: 100,
                    autoMinimize: true,
                    showSkipCropButton: true,
    
    
                }, (error, result) => {
                    if (!error && result && result.event === "success") {
                        console.log("Image uploaded");
                        $("#imageUrl").val(result.info.url); 
                        $("#thumbnailUrl").val(result.info.thumbnail_url);
                       $("#thumbnail-preview").attr("src",result.info.url)
                    }
                }
            );
    
            $("#btnUpload").on("click", function () {
                uploadImageWidget.open();
            });
    


        function editCategory() {
            debugger;
            var data = $('#FormEdit').serialize();

            //TODO KJ - create one more for edit subcategory
            if ($("#FormEdit").valid()) {
                $.ajax({
                    //TODO add [ValidateAntiForgeryToken]
                    url: "/Category/Edit/",
                    data: data,
                    type: "POST",
                    success: (function ({ item1, item2 }) {
                        if (item1 === 1) {
                            sweetAlert({
                                title: "Updated",
                                text: "Category details have been updated successfully!",
                                type: "success"
                            },
                                function () {
                                    window.location.href = '/category';
                                });
                        }
                        else {
                              swal("Oops",item2,"error");
                         }
                    }), error: (function (data) {
                        swal("Oops", "An unknown error occured! Please contact technical support.", "error");
                    })
                })
            }
        }
    </script>
}