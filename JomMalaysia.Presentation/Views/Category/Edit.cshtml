@model JomMalaysia.Presentation.Models.Categories.Category

@{
    ViewData["Title"] = "Edit Category";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="form-group col-md-12 no-padding d-none d-md-block">
    <button type="button" class="btn btn-success col-md-2" onclick="editCategory()">Save</button>
    <button type="button" class="btn btn-danger col-md-2" onclick="location.href='@Url.Action("Index", "Category")'">Cancel</button>
</div>

<form asp-action="Edit" id="FormEdit" class="form-m-gap-top">

    <!-- add whatever model data not in fields.-->
    @Html.HiddenFor(m => m.CategoryId)

    @Html.EditorForModel()

</form>
@* Contacts Modal *@
<div class="modal" id="modal-subcategory">
    <div class="modal-dialog modal-lg" role="document">
        <form id="FormSubEdit">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Subcategory</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    Loading..
                </div>

                <div class="modal-footer">
                    <button type="button" onclick="editSubcategory('@Model.CategoryId')" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" onclick="" data-dismiss="modal">Close</button>
                </div>
            </div>
        </form>
    </div>
</div>
<form asp-action="Create" method="post" id="FormNewSub">
    <input name="parentCategoryId" value="@Model.CategoryId" type="hidden"/>
    
    <tr class="subcategory-bg subcategory collapse">
        <td colspan="6" class="no-padding">
            <br/>
            <table id="subtabledata" class="table table-hover">
            <caption>Total subcategories: @Model.LstSubCategory.Count</caption>
                <thead class="table-primary">
                <tr>

                    <th scope="col">@Html.DisplayNameFor(c => c.CategoryCode)</th>
                    <th scope="col">@Html.DisplayNameFor(c => c.CategoryName)</th>
                    <th scope="col">@Html.DisplayNameFor(c => c.CategoryNameMs)</th>
                    <th scope="col">@Html.DisplayNameFor(c => c.CategoryNameZh)</th>
                    <th scope="col">No. of places</th>
                    <th scope="col">Action</th>
                </tr>
                </thead>
                @if (Model.LstSubCategory.Count > 0)
                {
                    <tbody>

                    @foreach (var subitem in Model.LstSubCategory)
                    {
                        <tr>

                            <td>@subitem.CategoryCode</td>
                            <td>@subitem.CategoryName</td>
                            <td>@subitem.CategoryNameMs</td>
                            <td>@subitem.CategoryNameZh</td>
                            <td>
                                @if (subitem.LstListing.Count > 0)
                                {
                                    <a asp-controller="Listing" asp-action="Index"
                                       asp-route-categoryId="@subitem.CategoryId"
                                       asp-route-categoryName="@subitem.CategoryName"
                                       class="btn btn-outline-warning col-md-10"
                                       target="_blank">
                                        <i class="fa fa-eye"></i>
                                        View <span class="badge badge-dark">@subitem.LstListing.Count</span>
                                    </a>
                                }
                                else
                                {
                                    <a class="btn btn-outline-warning col-md-10 disabled">
                                        <i class="fa fa-eye"></i>
                                        View <span class="badge badge-dark">@subitem.LstListing.Count</span>
                                    </a>
                                }
                            </td>
                            <td>
                                <a data-toggle="modal" data-target="#modal-subcategory"
                                   data-id="@subitem.CategoryId"
                                   @* href="@Url.Action("Edit", "Category", new {subitem.CategoryId})"  *@
                                   class="btn btn-outline-info col-md-3">

                                    <i class="fa fa-edit"></i>

                                </a>

                                <a href="#" onclick="deleteCategory('@subitem.CategoryId', '@subitem.CategoryName','@Model.CategoryId')"
                                   id="btnDelete" class="btn btn-outline-danger col-md-3  deleteButton">
                                    <span>
                                        <i class="fa fa-trash"></i>
                                    </span>
                                </a>

                            </td>
                        </tr>
                    }
                    </tbody>
                }
                <tfoot>
                <tr>
                    <td colspan="6" style="text-align: left;">
                        <input type="button" class="btn btn-lg btn-block btn-info" id="addRowBtn" onclick="addNewSubRow('@Model.CategoryId')" value="Add Subcategory"/>
                    </td>
                </tr>
                <tr>
                </tr>
                </tfoot>
            </table>


        </td>
    </tr>
</form>


@section Scripts{

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script type="text/javascript">
       let $modal = $('#modal-subcategory');
       $(function () {
           $modal.on('show.bs.modal', function (e) {
               let id = e.relatedTarget.dataset.id;
               $.ajax({
                   cache: false,
                   type: 'GET',
                   url: '/Category/Detail/' + id,
                   success: function (data) {
                       $modal.find('.modal-body').html(data);
                      
                   },
                   fail: function (error) {
                       $modal.hide();
                       swal("Oops", error, "error");
                   }
               });
           });
       });
       $(function () {
           $modal.on('hidden.bs.modal', function () {
               $modal.find('.modal-body').empty();
           });
       });
       
       let newSubform = $('#FormNewSub');
       function createSubcategory(category) {
       
           let data = newSubform.serialize();
       
           if (newSubform.valid()) {
               $.ajax({
       
                   url: "/Category/Create/",
                   data: data,
                   type: "POST",
                   success: (function ({ item1, item2 }) {
                       if (item1 === 1) {
                           sweetAlert({
                               title: "Success",
                               text: "Subcategory haas been added successfully!",
                               type: "success"
                           },
                               function () {
                                   window.location.href = '/category/edit/' + category;
                               });
                       }
                       else {
                           swal("Oops", item2, "error");
                           setLoading(false);
                       }
                   }), error: (function () {
                       setLoading(false);
                       swal("Oops", "An unknown error occured! Please contact technical support.", "error");
                   })
               })
       
           }
       }
       
       //new subcategory
       function addNewSubRow(categoryId) {
       
           let newRow = $("<tr id='new-sub-row'>");
           let cols = "";
       
           cols += '<td><input type="text" class="new-sub catCode form-control" name="CategoryCode" /></td>';
           cols += '<td><input type="text" class="new-sub catName form-control" name="CategoryName"/></td>';
           cols += '<td><input type="text" class="new-sub catNameMs form-control" name="CategoryNameMs"/></td>';
           cols += '<td><input type="text" class="new-sub catNameZh form-control" name="CategoryNameZh"/></td>';
           cols += '<td><input type="button" class="submit-new-sub btn btn-md btn-success" value="Save"></td>';
       
           newRow.append(cols);
           $("table#subtabledata").append(newRow);
           $(".submit-new-sub").on("click", function () { createSubcategory(categoryId) });
           $("#addRowBtn").attr('disabled',true);
       
       }
       //Delete category function
       function deleteCategory(catId, catName, parentId) {
           swal({
               title: "Are you sure?",
               text: "Are you sure that you want to delete " + catName + "?",
               type: "warning",
               showCancelButton: true,
               closeOnConfirm: false,
               confirmButtonText: "Yes",
               confirmButtonColor: "#ec6c62"
           },
               function () {
                   $.ajax({
                       //TODO add [ValidateAntiForgeryToken]
                       url: "/Category/ConfirmDelete/",
                       data: {
                           "CategoryId": catId
                       },
                       type: "POST",
                       success: (function ({ item1, item2 }) {
                           
                           if (item1 === 1) {
                               sweetAlert({
                                   title: "Deleted",
                                   text: catName + " has been deleted successfully!",
                                   type: "success"
                               },
                                   function () {
                                       window.location.href = '/category/edit/' + parentId;
                                   });
                           }
                           else {
                               swal("Oops", item2, "error");
                           }
                       }), error: (function () {
                           swal("Oops", "An unknown error occured! Please contact technical support.", "error");
                       })
                   })
               });
       }
       
       function editCategory() {
       
           let data = $('#FormEdit').serialize();
           setLoading(true);
           //TODO KJ - create one more for edit subcategory
           if ($("#FormEdit").valid()) {
               $.ajax({
                   //TODO add [ValidateAntiForgeryToken]
                   url: "/Category/Edit/",
                   data: data,
                   type: "POST",
                   success: (function ({ item1, item2 }) {
                       if (item1 === 1) {
                           sweetAlert({
                               title: "Updated",
                               text: "Category details have been updated successfully!",
                               type: "success"
                           },
                               function () {
                                   window.location.href = '/category';
                               });
                       }
                       else {
                           swal("Oops", item2, "error");
                           setLoading(false);
                       }
                   }), error: (function () {
                       setLoading(false);
                       swal("Oops", "An unknown error occured! Please contact technical support.", "error");
                   })
               })
           }
       }
       
       function editSubcategory(CategoryId) {
           let form = $('#FormSubEdit');
          
           let data = form.serialize();
           setLoading(true);
           //TODO KJ - create one more for edit subcategory
           if (form.valid()) {
               $.ajax({
                   //TODO add [ValidateAntiForgeryToken]
                   url: "/Category/Edit/",
                   data: data,
                   type: "POST",
                   success: (function ({ item1, item2 }) {
                       if (item1 === 1) {
                           sweetAlert({
                               title: "Updated",
                               text: "Subcategory details have been updated successfully!",
                               type: "success"
                           },
                               function () {
                                   window.location.href = '/category/Edit/' + CategoryId;
                               });
                       }
                       else {
                           swal("Oops", item2, "error");
                           setLoading(false);
                       }
                   }), error: (function () {
                       setLoading(false);
                       swal("Oops", "An unknown error occured! Please contact technical support.", "error");
                   })
               })
           }
       }
       

    </script>
}