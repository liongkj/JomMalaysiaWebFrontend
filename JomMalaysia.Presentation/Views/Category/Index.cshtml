@model IEnumerable<JomMalaysia.Presentation.Models.Categories.Category>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Category Management";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}
<div class="form-group row">
    <div class="col-sm-2 col-md-2 col-form-label">Type:</div>
    <div class="col-sm-10 col-md-4">
        <select id="category-filter" class="form-control">
            <option value="all">All Types</option>
            <option value="private">Private</option>
            <option value="professional">Professional</option>
            <option value="government">Government</option>
            <option value="nonprofit">Non Profit</option>
            <option value="attraction">Attractions</option>
        </select>
    </div>
</div>
<br/>

 @if (ViewData.ContainsKey("error"))
             {

                 <div class="jumbotron">
                     <h1 class="display-4">Opps!</h1>
                     <p class="lead">@ViewData["error"].</p>
           
                 </div>
             
} else{
    
    <form id="categoryForm" method="POST">
    <div class="col-md-12 col-sm-12 no-padding" style="overflow-x:auto !important">
        <table id="tableData" class="table table-hover">
            <!--remain id as this, else change name in _LayoutIndex too-->
            <thead class="table-primary">
            <tr>
                
                <th scope="col">@Html.DisplayNameFor(c => c.CategoryCode)</th>
                <th scope="col">@Html.DisplayNameFor(c => c.CategoryName)</th>
                <th scope="col">@Html.DisplayNameFor(c => c.CategoryNameMs)</th>
                <th scope="col">@Html.DisplayNameFor(c => c.CategoryNameZh)</th>
                 <th scope="col">Subcategories</th>
                <th scope="col">Action</th>
            </tr>
            </thead>
            <tbody>
                 @foreach (var item in Model)
                 {
                     <tr style="cursor:pointer;" data-toggle="collapse" data-target="collapse-next-subcategory" class="parent-category" data-type="@item.CategoryType">

                         <td>@item.CategoryCode</td>
                         <td>@item.CategoryName</td>
                         <td>@item.CategoryNameMs</td>
                         <td>@item.CategoryNameZh</td>
                         <td>
                             <span class="badge badge-dark">@(item.LstSubCategory.Count)</span>
                         </td>
                         <td class="btn-group" role="group">

                             <a href="@Url.Action("Edit", "Category", new {id = item.CategoryId})"
                                class="btn btn-info  form-control deleteButton" type="button"
                                data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Edit @item.CategoryName">
                                 <i class="fa fa-edit" aria-hidden="true"></i>
                             </a>

                             <a href="#" onclick="deleteCategory('@item.CategoryId', '@item.CategoryName')"
                                class="btn btn-danger form-control deleteButton" type="button"
                                data-toggle="tooltip" data-placement="bottom" title="" data-original-title="delete @item.CategoryName">
                                 <i class="fa fa-trash" aria-hidden="true"></i>
                             </a>
                         </td>

                     </tr>

                 }
                 </tbody>
  
        </table>
    </div>
</form>}

<!--Other Commmon Scripts are in _LayoutIndex.cshtml-->

@section SpecificScripts{

    <script type="text/javascript">
    
    //filter category by type function
    $("#category-filter").change(function() {
        let filterValue = $(this).val().toLowerCase();
        let row = $('.parent-category'); 
          
        row.hide();
        row.each(function(i, el) {
             if($(el).attr('data-type').toLowerCase() === filterValue) {
                 $(el).show();
             }
        });
        
        if ("all" === filterValue) {
            row.show();
          }
         
    });
    
     //toggle subcategory function
        $(document).ready(function () {
            //click category row to show subs
            $('#categoryForm').on('click.collapse-next-subcategory.data-api', '[data-target=collapse-next-subcategory]', function () {
                
                //var $target = $(this).parent().parent().closest('tr').next('tr').toggle();
                $(this).closest('tr').next('tr.subcategory').toggle();
                $(".btnSubcategory").toggleClass("fa-angle-down fa-angle-up");
            });
             //prevent buttons to execute function above
            $(".addButton").click(function (event) {
                event.stopPropagation()
            });
            
             $(".deleteButton").click(function (event) {
                 event.stopPropagation()
             });
             
             $(".editButton").click(function (event) {
                 event.stopPropagation()
              });

            
        });
        
        //Delete category function
         function deleteCategory(catId, catName) {
                      
                        swal({
                            title: "Are you sure?",
                            text: "Are you sure that you want to delete " + catName + "?",
                            type: "warning",
                            showCancelButton: true,
                            closeOnConfirm: false,
                            confirmButtonText: "Yes",
                            confirmButtonColor: "#ec6c62"
                        },
                            function () {
                                $.ajax({
                                    //TODO add [ValidateAntiForgeryToken]
                                    url: "/Category/ConfirmDelete/",
                                    data: {
                                        "CategoryId": catId
                                    },
                                    type: "POST",
                                     success: (function ({ item1, item2 }) {
                                         debugger
                                        if (item1 === 1) {
                                            sweetAlert({
                                                title: "Deleted",
                                                text: catName + " has been deleted successfully!",
                                                type: "success"
                                            },
                                                function () {
                                                    window.location.href = '/category';
                                                });
                                        }
                                          else {
                                            swal("Oops",item2,"error");
                                          }
                                    }), error: (function () {
                                        swal("Oops", "An unknown error occured! Please contact technical support.", "error");
                                    })
                                })
                            });
                    }
    </script>
}