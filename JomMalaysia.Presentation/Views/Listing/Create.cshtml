@model JomMalaysia.Presentation.ViewModels.Listings.RegisterListingViewModel
<!--modal-->
@{
    ViewData["Title"] = "Create new Listing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!--HEADER-->
<div class="form-group col-md-12 no-padding d-none d-md-block">
    <button type="submit" form="FormCreate" class="btn btn-success col-md-2 submitButton" id="btnListingSubmit">Save</button>
    <button type="button" class="btn btn-danger col-md-2 cancelButton" onclick="window.history.go(-1); return false;">Back</button>
</div>

<!--Mobile Buttons-->
<div class="form-group col-md-12 no-padding d-sm-block d-md-none">
    <div class="btn-group col-sm-12 no-padding" role="group">
        <button type="button" class="btn btn-primary">Action</button>
        <div id="dropdown-action-button" class="dropdown-menu col-sm-12" aria-labelledby="btnGroupDrop1" x-placement="bottom-start" style="display:none; position: absolute; transform: translate3d(0px, 35px, 0px); top: 0; left: 0; will-change: transform;">

            <a class="dropdown-item" onclick="window.history.go(-1); return false;">Back</a>
        </div>
        <div id="action-button" class="btn-group" role="group">
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
        </div>
    </div>
</div>
<!--END OF HEADER-->

<form asp-controller="Listing" asp-action="Create" id="FormCreate"
      class="form-m-gap-top" method="post">
    @Html.EditorForModel();


</form>
<div id="service-helper"></div>


@section Scripts{
    @{ await Html.RenderPartialAsync("_PlacesApiPartial"); }
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    @{ await Html.RenderPartialAsync("_CloudinaryPartial"); }
    @{ await Html.RenderPartialAsync("_TimePickerPartial"); }
    <script src="~/js/Listings/ModalFunctionScripts.js"></script>


    <script type="text/javascript">
   

    $("#tags-select2").select2({
                           tags: true,
                           tokenSeparators: [',', ' ']
                       });

   
   
    $("#FormCreate").submit(function (e) {
          e.preventDefault();
          setLoading(true);
          parseAdsImage();
      let data = $(this).serialize();
        let token = $('input[name="__RequestVerificationToken"]').val();
                  debugger
                  if ($(this).valid()) {
                      $.ajax({
                          url: "/Listing/Create/",
                          data: data,
                           headers: {
                           'RequestVerificationToken': token
                           },
                          type: "POST",
                          success: (function ({ item1, item2 }) {
                               if (item1 === 1) {
                                  sweetAlert({
                                      title: "Created",
                                      text: "Listing has been created successfully!",
                                      type: "success"
                                  },
                                      function () {
                                          window.location.href = '/listing';
                                      });
                              } else {
                                   setLoading(false);
                                    swal("Oops",item2,"error");
                              }
                                     }), 
                               error: (function (data) {
                                   setLoading(false);
                              swal("Oops", "Error code: "+data.status+". Please contact technical support.", "error");
                              
                          })
                      })
                  }else{setLoading(false);}
      
    });
</script>


}