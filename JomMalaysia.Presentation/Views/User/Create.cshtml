@model JomMalaysia.Presentation.ViewModels.Users.RegisterUserViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Create New User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--HEADER-->

    <div class="form-group col-md-12 no-padding d-none d-md-block">
        <button type="button" class="btn btn-success col-md-2" onclick="create()">Save</button>
        <button type="button" class="btn btn-danger col-md-2" onclick="window.history.go(-1); return false;">Cancel</button>
    </div>
<!--Mobile Buttons-->
<div class="form-group col-md-12 no-padding d-sm-block d-md-none">
    <div class="btn-group col-sm-12 no-padding" role="group">
        <button type="button" class="btn btn-primary">Action</button>
        <div id="dropdown-action-button" class="dropdown-menu col-sm-12" aria-labelledby="btnGroupDrop1" x-placement="bottom-start" style="display:none; position: absolute; transform: translate3d(0px, 35px, 0px); top: 0px; left: 0px; will-change: transform;">
            <a class="dropdown-item" onclick="$('#btnSubmit').click()">Save</a>
            <a class="dropdown-item" onclick="window.history.go(-1); return false;">Cancel</a>
        </div>
        <div id="action-button" class="btn-group" role="group">
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
        </div>
    </div>
</div>
<!--END OF HEADER-->

<form asp-controller="User" asp-action="Create" id="FormCreate" class="form-m-gap-top" method="post" s>
    
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.Username)</div>
        <div class="col-sm-10 col-md-6">
            <input asp-for="Username" class="form-control" />
            <span asp-validation-for="Username" class="text-danger" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.Email)</div>
        <div class="col-sm-10 col-md-6">
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger" />

        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.Name)</div>
        <div class="col-sm-10 col-md-6">
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2 col-md-3 col-form-label">@Html.DisplayNameFor(m => m.Role)</div>
        <div class="custom-control custom-radio">
            <div class="col-sm-10 col-md-6">
                <select asp-for="Role" asp-items="Model.RoleList"> </select>
            </div>
        </div>
    </div>
</form>

@section Scripts {


    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        function create() {
            var data = $("#FormCreate").serialize();

            if ($("#FormCreate").valid()) {
                $.ajax({
                    //TODO add [ValidateAntiForgeryToken]
                    url: "/User/Create/",
                    data: data,
                    type: "POST",
                    success: function ({ item1, item2 }) {
                        if (item1 == 1) {
                            sweetAlert(
                                {
                                    title: "User Created",
                                    text: "A new email is sent to user to activate their account",
                                    type: "success"
                                },
                                function () {
                                    window.location.href = "/user";
                                }
                            );


                        } else {
                            swal(
                                "Oops",
                                item2,
                                "error"
                            );
                        }
                    },
                    error: function (xhr,err) {
                        debugger
                        swal(
                            "Oops",
                            "An unknown error occured! Please contact technical support.",
                            "error"
                        );
                    }
                });
            }
        }

    </script>

}